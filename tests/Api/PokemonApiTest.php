<?php
/**
 * PokemonApiTest
 * PHP version 8.1
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * PokéAPI
 *
 * All the Pokémon data you'll ever need in one place, easily accessible through a modern free open-source RESTful API.  ## What is this?  This is a full RESTful API linked to an extensive database detailing everything about the Pokémon main game series.  We've covered everything from Pokémon to Berry Flavors.  ## Where do I start?  We have awesome [documentation](https://pokeapi.co/docs/v2) on how to use this API. It takes minutes to get started.  This API will always be publicly available and will never require any extensive setup process to consume.  Created by [**Paul Hallett**(]https://github.com/phalt) and other [**PokéAPI contributors***](https://github.com/PokeAPI/pokeapi#contributing) around the world. Pokémon and Pokémon character names are trademarks of Nintendo.
 *
 * The version of the OpenAPI document: 2.7.0
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use OpenAPI\Client\Configuration;
use OpenAPI\Client\ApiException;
use OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PokemonApiTest Class Doc Comment
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PokemonApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for abilityList
     *
     * .
     *
     */
    public function testAbilityList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for abilityRetrieve
     *
     * .
     *
     */
    public function testAbilityRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for characteristicList
     *
     * List charecterictics.
     *
     */
    public function testCharacteristicList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for characteristicRetrieve
     *
     * Get characteristic.
     *
     */
    public function testCharacteristicRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for eggGroupList
     *
     * List egg groups.
     *
     */
    public function testEggGroupList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for eggGroupRetrieve
     *
     * Get egg group.
     *
     */
    public function testEggGroupRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for genderList
     *
     * List genders.
     *
     */
    public function testGenderList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for genderRetrieve
     *
     * Get gender.
     *
     */
    public function testGenderRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for growthRateList
     *
     * List growth rates.
     *
     */
    public function testGrowthRateList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for growthRateRetrieve
     *
     * Get growth rate.
     *
     */
    public function testGrowthRateRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for moveDamageClassList
     *
     * List move damage classes.
     *
     */
    public function testMoveDamageClassList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for moveDamageClassRetrieve
     *
     * Get move damage class.
     *
     */
    public function testMoveDamageClassRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for natureList
     *
     * List natures.
     *
     */
    public function testNatureList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for natureRetrieve
     *
     * Get nature.
     *
     */
    public function testNatureRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokeathlonStatList
     *
     * List pokeathlon stats.
     *
     */
    public function testPokeathlonStatList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokeathlonStatRetrieve
     *
     * Get pokeathlon stat.
     *
     */
    public function testPokeathlonStatRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonColorList
     *
     * List pokemon colors.
     *
     */
    public function testPokemonColorList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonColorRetrieve
     *
     * Get pokemon color.
     *
     */
    public function testPokemonColorRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonFormList
     *
     * List pokemon forms.
     *
     */
    public function testPokemonFormList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonFormRetrieve
     *
     * Get pokemon form.
     *
     */
    public function testPokemonFormRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonHabitatList
     *
     * List pokemom habitas.
     *
     */
    public function testPokemonHabitatList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonHabitatRetrieve
     *
     * Get pokemom habita.
     *
     */
    public function testPokemonHabitatRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonList
     *
     * List pokemon.
     *
     */
    public function testPokemonList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonRetrieve
     *
     * Get pokemon.
     *
     */
    public function testPokemonRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonShapeList
     *
     * List pokemon shapes.
     *
     */
    public function testPokemonShapeList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonShapeRetrieve
     *
     * Get pokemon shape.
     *
     */
    public function testPokemonShapeRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonSpeciesList
     *
     * List pokemon species.
     *
     */
    public function testPokemonSpeciesList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pokemonSpeciesRetrieve
     *
     * Get pokemon species.
     *
     */
    public function testPokemonSpeciesRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for statList
     *
     * List stats.
     *
     */
    public function testStatList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for statRetrieve
     *
     * Get stat.
     *
     */
    public function testStatRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for typeList
     *
     * List types.
     *
     */
    public function testTypeList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for typeRetrieve
     *
     * Get types.
     *
     */
    public function testTypeRetrieve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
